using System;
using System.Collections.Generic;
using System.Text;

namespace ConsoleBigLetters {
    public static class Symbols {
        private static Dictionary<char, char[, ]> symbols = new Dictionary<char, char[, ]> ();
        // private static char[,]arrList;
        

        public static char[, ] GetNum (char num) {
            char[, ] result = null;

            try
            {
                result = symbols[num];
            }
            catch (KeyNotFoundException)
            {
                result = symbols['?'];
            }

            return result;
        }

        public static void PrintThisShit (string s, char symbol = '#' , ConsoleColor color = ConsoleColor.Green) {
            char[] inputChars = null;
            char[, ] resultArr = null;
            StringBuilder strbResult = null;
            List<char[, ]> arrList = new List<char[,]>();

            inputChars = s.ToUpper().ToCharArray ();

            foreach (char item in inputChars) {
                arrList.Add (GetNum (item));
            }

            resultArr = ConcatArrays (arrList);

            strbResult = ToOneLineArrayConvert(resultArr);

            if (symbol != '#') {
                strbResult = strbResult.Replace('#', symbol);
            }

            Tools.WriteLineColorized ($"{strbResult.ToString()}", color);
        }

        private static char[, ] ConcatArrays (List<char[, ]> list) {

            int rows_max    = 0;
            int rows_item   = 0;
            int cols_item   = 0;
            int cols_all    = 0;
            int shift       = 0;

            foreach (var item in list) {
                cols_all += item.GetLength(1);
                rows_max  = item.GetLength(0) > rows_max ? item.GetLength(0) : rows_max;
            }

            char[, ] result = new char[rows_max, cols_all];

            for (int ln = 0; ln < list.Count; ln++) {

                cols_item = list[ln].GetLength(1);
                rows_item = list[ln].GetLength(0);

                for (int i = 0; i < rows_item; i++) {
                    for (int j = 0; j < cols_item; j++) {
                        result[i, shift + j] = list[ln][i, j];
                    }
                }

                shift += cols_item;
            }

            return result;
        }
        private static StringBuilder ToOneLineArrayConvert (char[, ] arr) {
            int rows = arr.GetLength (0);
            int cols = arr.GetLength (1);

            StringBuilder result = new StringBuilder ();

            for (int i = 0; i < rows; i++) {
                for (int j = 0; j < cols; j++) {
                    result.Append (arr[i, j]);
                }
                result.Append ('\n');
            }

            return result;
        }

        public static void Init () {
            // todo: Do init from .json file

            #region ABC
            symbols.Add (
                'A',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'B',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'C',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'D',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'E',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                'F',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }
                }
            );

            symbols.Add (
                'G',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'H',
                new char[, ] {
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'I',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                'J',
                new char[, ] {
                    { ' ', ' ', '#', '#', '#', ' ' }, 
                    { ' ', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'K',
                new char[, ] {
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'L',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                'M',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', ' ', '#', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'N',
                new char[, ] {
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'O',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'P',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ' }
                }
            );

            symbols.Add (
                'Q',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'R',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'S',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'T',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'U',
                new char[, ] {
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'V',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }
                }
            );

            symbols.Add (
                'W',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                'X',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                'Y',
                new char[, ] {
                    { ' ', '#', ' ', ' ', ' ', '#', ' ' }, 
                    { ' ', ' ', '#', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }
                }
            );

            symbols.Add (
                'Z',
                new char[, ] {
                    { ' ', '#', '#', '#', '#', '#', ' ' }, 
                    { ' ', ' ', ' ', ' ', '#', ' ', ' ' }, 
                    { ' ', ' ', ' ', '#', ' ', ' ', ' ' }, 
                    { ' ', ' ', '#', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', ' ', ' ', ' ', ' ', ' ' }, 
                    { ' ', '#', '#', '#', '#', '#', ' ' }
                }
            );
            #endregion

            #region Spec symbols

            symbols.Add (
                ' ',
                new char[, ] {
                    { ' ', ' ', ' ', ' '},
                    { ' ', ' ', ' ', ' '}, 
                    { ' ', ' ', ' ', ' '}, 
                    { ' ', ' ', ' ', ' '}, 
                    { ' ', ' ', ' ', ' '}, 
                    { ' ', ' ', ' ', ' '}
                }
            );

            symbols.Add (
                '?',
                new char[, ] {
                    { ' ', ' ', '#', '#', ' ', ' '},
                    { ' ', '#', ' ', ' ', '#', ' '}, 
                    { ' ', ' ', ' ', ' ', '#', ' '}, 
                    { ' ', ' ', ' ', '#', ' ', ' '}, 
                    { ' ', ' ', ' ', ' ', ' ', ' '}, 
                    { ' ', ' ', ' ', '#', ' ', ' '}
                }
            );

            symbols.Add (
                '!',
                new char[, ] {
                    { ' ', '#', ' '},
                    { ' ', '#', ' '}, 
                    { ' ', '#', ' '}, 
                    { ' ', '#', ' '}, 
                    { ' ', '#', ' '}, 
                    { ' ', ' ', ' '}, 
                    { ' ', '#', ' '}
                }
            );

            #endregion

            #region Numbers
            symbols.Add (
                '0',
                new char[, ] {
                    { ' ', '#', '#', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', ' ', '#', ' ' }, 
                    { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '1',
                new char[, ] { { ' ', ' ', '#', ' ', ' ' }, { ' ', '#', '#', ' ', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '2',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', '#', ' ', ' ', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '3',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '4',
                new char[, ] { { ' ', '#', ' ', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }
                }
            );

            symbols.Add (
                '5',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', ' ', ' ' }, { ' ', '#', '#', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '6',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', ' ', ' ' }, { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '7',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', ' ', '#', ' ', ' ' }, { ' ', ' ', '#', ' ', ' ' }
                }
            );

            symbols.Add (
                '8',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );

            symbols.Add (
                '9',
                new char[, ] { { ' ', '#', '#', '#', ' ' }, { ' ', '#', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', ' ', ' ', '#', ' ' }, { ' ', '#', '#', '#', ' ' }
                }
            );
            #endregion
        }
    }
}